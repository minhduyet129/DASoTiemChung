@using DASoTiemChung.Controllers
@{
    ViewBag.Title = "Quản lý xuất vắc xin";
}

@section Styles {
    <style type="text/css">
    </style>
}

<div class="page-heading">
    <div class="page-title">
        <div class="row">
            <div class="col-12 col-md-6 order-md-1 order-last">
                <h3>@Html.Raw(ViewBag.Title)</h3>

            </div>
            <div class="col-12 col-md-6 order-md-2 order-first">
                <nav aria-label="breadcrumb" class="breadcrumb-header float-start float-lg-end">
                    <ol class="breadcrumb">
                        @*<li class="breadcrumb-item"><a href="javascript:;">Dữ liệu cơ bản (v2)</a></li>*@
                        @*<li class="breadcrumb-item active" aria-current="page">Quản lý trường học (v2)</li>*@
                    </ol>
                </nav>
            </div>
        </div>
    </div>
    <section class="section">
        <div class="card border">
            <div class="card-header d-flex align-items-center">
                <h4 class="card-title m-0">Tìm kiếm</h4>
                <button class="btn ms-auto"
                        type="button"
                        data-bs-toggle="collapse"
                        data-bs-target="#search"
                        aria-expanded="true"
                        aria-controls="search">
                    <i class="fa fa-angle-down"></i>
                </button>
            </div>
            <div class="card-content show" id="search">
                <div class="card-body">
                    <form id="searchForm" class="form">
                        <div class="row">
                            <div class="col-md-3 col-12">
                                <div class="form-group">
                                    <label for="searchMaPhieuXuat">Mã phiếu xuất</label>
                                    <div class="position-relative">
                                        <input type="text" id="searchMaPhieuXuat" class="form-control"
                                               placeholder="Nhập mã phiếu xuất muốn tìm" name="school-name">
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3 col-12">
                                <div class="form-group">
                                    <label for="searchNgayHetHan">Ngày Xuất</label>
                                    <div class="position-relative">
                                        <input type="date" id="searchNgayHetHan" class="form-control">
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 col-12">
                                <div class="form-group">
                                    <label for="searchTenDiemXuat">Từ kho</label>
                                    <div class="position-relative">
                                        <input type="text" id="searchTenDiemXuat" class="form-control"
                                               placeholder="Nhập kho muốn tìm" name="school-name">
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3 col-12">
                                <div class="form-group">
                                    <label for="searchTenDiemNhan">Đến điểm tiêm</label>
                                    <div class="position-relative">
                                        <input type="text" id="searchTenDiemNhan" class="form-control"
                                               placeholder="Nhập điểm tiêm muốn tìm" name="school-name">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 d-flex justify-content-end">
                                <button type="submit"
                                        class="btn btn-primary me-1 mb-1">
                                    Tìm kiếm
                                </button>
                                @*<button type="reset"
                                    class="btn btn-light-secondary me-1 mb-1">
                                    Reset
                                    </button>*@
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </section>

    <!-- Striped rows start -->
    <section class="section">
        <div class="card border">
            <div class="card-header d-flex align-items-center">
                <div class="d-flex justify-content-between w-100">
                    <h4 class="card-title m-0">Danh sách hóa đơn xuất vắc xin</h4>
                    <button type="button" class="btn btn-primary"
                            onclick="openForm({ url: '@Url.RouteUrl(PhieuXuatController.RouteForm, new { id = 0 })' })">
                        Thêm mới
                    </button>
                </div>
            </div>
            @*<div class="card-body"></div>*@
            <div id="dataTable" style="min-height: 100px;">
            </div>
        </div>
    </section>
    <!-- Striped rows end -->
</div>
<div class="modal fade" id="detailModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        let $dataTable;
        let $searchMaPhieuXuat;
        let $searchTenNhanVien;
        let $searchTenDiemNhan;
        let $searchTenDiemXuat;

        let $searchNgayHetHan;
        let $detailModal;
        let detailModalInstance;
        let SkipCount = 1;
        let MaxResultCount = 10;
        let pagingAjaxInstance;
        let detailAjaxInstance;

        $(document).ready(function() {
            $dataTable = $("#dataTable");
            $searchMaPhieuXuat = $("#searchMaPhieuXuat");
            $searchTenNhanVien = $("#searchTenNhanVien");
            $searchTenDiemNhan = $("#searchTenDiemNhan");
            $searchTenDiemXuat=$("#searchTenDiemXuat");

            $searchNgayHetHan = $("#searchNgayHetHan");


            $searchForm = $("#searchForm");
            $detailModal = $("#detailModal");
            detailModalInstance = new bootstrap.Modal(
                document.getElementById("detailModal"),
                {
                    backdrop: 'static',
                    keyboard: false,
                    focus: false,
                }
            );

            //$detailModal.on('shown.bs.modal', function() {
            //    $(document).off('focusin.modal');
            //});

            $detailModal.on("hide.bs.modal", function(e) {
                detailAjaxInstance && detailAjaxInstance.abort();
                detailAjaxInstance = null;
            });

            $(document)
                .unbind()
                .on("submit", "#searchForm", function(e) {
                    e.preventDefault();

                    getPaging({ index: 1 });
                });

            getPaging();
        });

        function getPaging(
            { index, size } = { index: SkipCount, size: MaxResultCount }
        ) {
            pagingAjaxInstance && pagingAjaxInstance.abort();
            pagingAjaxInstance = null;

            SkipCount = index || SkipCount;
            MaxResultCount = size || MaxResultCount;

            let payload = {
                SkipCount,
                MaxResultCount,
                MaPhieuXuat: $.trim($searchMaPhieuXuat.val()).length > 0 ? $.trim($searchMaPhieuXuat.val()) : "",
                TenNhanVien: $.trim($searchTenNhanVien.val()).length > 0 ? $.trim($searchTenNhanVien.val()) : "",
                TenDiemNhan: $.trim($searchTenDiemNhan.val()).length > 0 ? $.trim($searchTenDiemNhan.val()) : "",
                TenDiemXuat: $.trim($searchTenDiemXuat.val()).length > 0 ? $.trim($searchTenDiemXuat.val()) : "",

                ThoiGianXuat: $.trim($searchNgayHetHan.val()).length > 0 ? $.trim($searchNgayHetHan.val()) : "",

            };

            pagingAjaxInstance = $.ajax({
                url: `@Url.RouteUrl(PhieuXuatController.RouteDataGrid)`,
                method: "GET",
                data: payload,
                beforeSend: () => {
                    $dataTable.FLoading("show");
                },
                success: (result) => {
                    $dataTable.empty().append(result);
                },
                error: (jqXHR, textStatus, errorThrown) => {
                    let error = { message: "Đã có lỗi xảy ra, vui lòng liên hệ quản trị!" };
                    if ($.trim(jqXHR.responseText).length > 0) {
                        try {
                            error = (JSON.parse(jqXHR.responseText) ?? { error: { ...error } })
                                .error;
                        } catch {
                            error.message = jqXHR.responseText;
                        }
                    }
                    Swal.fire({
                        icon: "error",
                        title: "Ôi không...",
                        text: error.message,
                        //footer: '<a href="javascript:;">Why do I have this issue?</a>'
                    });
                },
            }).always(() => {
                $dataTable.FLoading("hide");
            });
        }

        function openForm({ url }) {
            detailAjaxInstance = $.ajax({
                url,
                method: "GET",
                beforeSend: () => {
                    $("#main").FLoading("show");
                    //$detailModal.find(".modal-body").empty().append("Đang tải dữ liệu...");
                },
                success: (result) => {
                    $detailModal.find(".modal-content").empty().append(result);



                    detailModalInstance.show();
                },
                error: (jqXHR, textStatus, errorThrown) => {
                    let error = { message: "Đã có lỗi xảy ra, vui lòng liên hệ quản trị!" };
                    if ($.trim(jqXHR.responseText).length > 0) {
                        try {
                            error = (JSON.parse(jqXHR.responseText) ?? { error: { ...error } })
                                .error;
                        } catch {
                            error.message = jqXHR.responseText;
                        }
                    }
                    Swal.fire({
                        icon: "error",
                        title: "Ôi không...",
                        text: error.message,
                        //footer: '<a href="javascript:;">Why do I have this issue?</a>'
                    });
                },
            }).always(() => {
                $("#main").FLoading("hide");
            });
        }

        function saveForm({ url, method }) {
            if (!$("#pcNhanVien").val()) {
                Swal.fire({
                    icon: 'error',
                    title: 'Ôi không...',
                    text: 'Vui lòng chọn tên nhân viên xuất',
                    //footer: '<a href="javascript:;">Why do I have this issue?</a>'
                });
                return;
            } if (!$("#pcThoiGianXuat").val()) {
                Swal.fire({
                    icon: 'error',
                    title: 'Ôi không...',
                    text: 'Vui lòng chọn thời gian xuất',
                    //footer: '<a href="javascript:;">Why do I have this issue?</a>'
                });
                return;
            }
            if (!$("#pcDiemTiem").val()) {
                Swal.fire({
                    icon: 'error',
                    title: 'Ôi không...',
                    text: 'Vui lòng chọn điểm tiêm',
                    //footer: '<a href="javascript:;">Why do I have this issue?</a>'
                });
                return;
            }
            if (!$("#pcKhoXuat").val()) {
                Swal.fire({
                    icon: 'error',
                    title: 'Ôi không...',
                    text: 'Vui lòng chọn kho xuất đi',
                    //footer: '<a href="javascript:;">Why do I have this issue?</a>'
                });
                return;
            }
            
            let pcId = $("#pcId").val();
            let pcNhanVien = $("#pcNhanVien").val();
            let pcDiemTiem = $("#pcDiemTiem").val();
            let pcKhoXuat = $("#pcKhoXuat").val();

            let pcThoiGianXuat = $("#pcThoiGianXuat").val();
            let pcGhiChu = $("#pcGhiChu").val();
            let detail = [];
            let maVacXinTheoLos = $(".maVacXinTheoLo");
            let soLuongXuats = $(".soLuongXuat");

            for (let i = 0; i < maVacXinTheoLos.length; i++) {
                let data = {
                    MaVacXinTheoLo: Number(maVacXinTheoLos[i].innerText),
                    SoLuong: Number(soLuongXuats[i].value)

                }
                detail.push(data);
            }

            $.ajax({
                url,
                method,
                data: {
                    MaPhieuXuat:pcId,
                    MaNhanVien: pcNhanVien,
                    MaKhoNhan: pcDiemTiem,
                    MaKhoXuat: pcKhoXuat,
                    ThoiGianXuat: pcThoiGianXuat,
                    ChiTietPhieuXuats: detail,
                    GhiChu: pcGhiChu

                },
                beforeSend: () => {
                    //$detailModal.FLoading("show");
                    //$detailModal.find(".modal-body").empty().append("Đang tải dữ liệu...");
                },
                success: (result) => {
                    detailModalInstance.hide();
                    getPaging();

                    Swal.fire({
                        icon: "success",
                        title: "Thực hiện thành công",
                    }).then((result) => {

                    });
                },
                error: (jqXHR, textStatus, errorThrown) => {
                    let error = { message: "Đã có lỗi xảy ra, vui lòng liên hệ quản trị!" };
                    if ($.trim(jqXHR.responseText).length > 0) {
                        try {
                            error = (JSON.parse(jqXHR.responseText) ?? { error: { ...error } })
                                .error;
                        } catch {
                            error.message = jqXHR.responseText;
                        }
                    }
                    Swal.fire({
                        icon: "error",
                        title: "Ôi không...",
                        text: error.message,
                        //footer: '<a href="javascript:;">Why do I have this issue?</a>'
                    });
                },
            }).always(() => {
                //$detailModal.FLoading("hide");
            });
        }

        function closeForm() {
            Swal.fire({
                icon: 'question',
                title: "Bạn có chắc chắn muốn đóng cửa sổ này?",
                text: "Nếu bạn đóng cửa sổ này, tất cả các thay đổi sẽ không được lưu!",
                showCancelButton: true,
                confirmButtonText: 'Có',
                confirmButtonColor: '#d33',
                cancelButtonText: 'Không',
                cancelButtonColor: '#3085d6',
                focusCancel: true,
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    detailModalInstance.hide();
                }
            });
        }

        function confirmOnDelete({ url }) {
            Swal.fire({
                icon: 'question',
                title: "Bạn có chắc chắn muốn xóa?",
                showCancelButton: true,
                confirmButtonText: 'Có',
                confirmButtonColor: '#d33',
                cancelButtonText: 'Không',
                cancelButtonColor: '#3085d6',
                focusCancel: true,
            }).then((result) => {
                if (result.isConfirmed) {
                    deleteItem({ url });
                }
            });
        }

        function deleteItem({ url }) {
            $.ajax({
                url,
                method: "DELETE",
                beforeSend: () => {
                    //$detailModal.FLoading("show");
                    //$detailModal.find(".modal-body").empty().append("Đang tải dữ liệu...");
                },
                success: (result) => {
                    getPaging();

                    Swal.fire({
                        icon: "success",
                        title: "Thực hiện thành công",
                    }).then((result) => {

                    });
                },
                error: (jqXHR, textStatus, errorThrown) => {
                    let error = { message: "Đã có lỗi xảy ra, vui lòng liên hệ quản trị!" };
                    if ($.trim(jqXHR.responseText).length > 0) {
                        try {
                            error = (JSON.parse(jqXHR.responseText) ?? { error: { ...error } })
                                .error;
                        } catch {
                            error.message = jqXHR.responseText;
                        }
                    }
                    Swal.fire({
                        icon: "error",
                        title: "Ôi không...",
                        text: error.message,
                        //footer: '<a href="javascript:;">Why do I have this issue?</a>'
                    });
                },
            }).always(() => {
                //$detailModal.FLoading("hide");
            });
        }



        //search product

        function searchProductInput(e) {
            var key = e.keyCode || e.which;
            if (key == 13) {
                if (!$("#pcKho").val()) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Ôi không...',
                        text: 'Vui lòng chọn tên kho nhập',
                        //footer: '<a href="javascript:;">Why do I have this issue?</a>'
                    });
                    return;
                }

                $.ajax({
                    url: `@Url.RouteUrl(VacXinTheoLoController.RouteDataJson)`,
                    method: "GET",
                    data: {
                        TenVacXinTheoLo: $("#searchProductInput").val(),
                        MaKho: $("#pcKhoXuat").val(),
                        SkipCount: 1,
                        MaxResultCount: 20
                    }
                    ,
                    success: (result) => {
                        $("#showProduct").html('');

                        var productlist = '';
                        for (let i = 0; i < result.items.length; i++) {
                            productlist += `<div class="mx-3" style="cursor:pointer" onclick="appendCombo('${result.items[i].maVacXinTheoLo}','${result.items[i].tenVacXinTheoLo}')">${result.items[i].tenVacXinTheoLo}</div><hr class="m-0">`
                        }


                        $("#showProduct").append(productlist);

                    },
                    error: (jqXHR, textStatus, errorThrown) => {
                        let error = { message: "Đã có lỗi xảy ra, vui lòng liên hệ quản trị!" };
                        if ($.trim(jqXHR.responseText).length > 0) {
                            try {
                                error = (JSON.parse(jqXHR.responseText) ?? { error: { ...error } })
                                    .error;
                            } catch {
                                error.message = jqXHR.responseText;
                            }
                        }
                        Swal.fire({
                            icon: "error",
                            title: "Ôi không...",
                            text: error.message,
                            //footer: '<a href="javascript:;">Why do I have this issue?</a>'
                        });
                    },
                }).always(() => {
                    //$detailModal.FLoading("hide");
                });
            }
        }

        function appendCombo(id, name) {
            $("#searchProductInput").val(name);

            if ($(`.tr-${id}`).length < 1) {
                let tr = '';
                tr = `<tr class="tr-${id}">


                            <th scope="row"></th>
                                    <td class="d-none maVacXinTheoLo">${id}</td>
                                    <td>${name}</td>
                                    <td><input type="number" min="0" value="0" class="form-control soLuongXuat" placeholder="Số lượng xuất"></td>
                                    <td><i style="cursor:pointer;" onclick="removeProduct('${id}')" class="bi bi-trash-fill"></i></td>
                        </tr>
                        `;
                $("#comboBody").append(tr);
            }

        }

        function removeProduct(id) {
            $(`.tr-${id}`).remove();
        }


        function searchNhanVienKho() {
                $.ajax({
                    url: `@Url.RouteUrl(NhanVienController.RouteDataJson)`,
                    method: "GET",
                    data: {
                        MaKho: $.trim($("#pcKhoXuat").val()).length > 0 ? $.trim($("#pcKhoXuat").val()) : "",
                    },
                    beforeSend: () => {
                        //$detailModal.FLoading("show");
                        //$detailModal.find(".modal-body").empty().append("Đang tải dữ liệu...");
                    },
                    success: (result) => {

                        let contentNhanVien = '<option value="">Chọn nhân viên</option>';
                        for (let item of result) {
                            contentNhanVien += `<option value=${item.maNhanVien} >${item.tenTaiKhoan}</option>`;
                        }
                        $("#pcNhanVien").empty().append(contentNhanVien);
                        console.log(result);

                    },
                    error: (jqXHR, textStatus, errorThrown) => {
                        let error = { message: "Đã có lỗi xảy ra, vui lòng liên hệ quản trị!" };
                        if ($.trim(jqXHR.responseText).length > 0) {
                            try {
                                error = (JSON.parse(jqXHR.responseText) ?? { error: { ...error } })
                                    .error;
                            } catch {
                                error.message = jqXHR.responseText;
                            }
                        }
                        Swal.fire({
                            icon: "error",
                            title: "Ôi không...",
                            text: error.message,
                            //footer: '<a href="javascript:;">Why do I have this issue?</a>'
                        });
                    },
                }).always(() => {
                    //$detailModal.FLoading("hide");
                });
            }
    </script>
}