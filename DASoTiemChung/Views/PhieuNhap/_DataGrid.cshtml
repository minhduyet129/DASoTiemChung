@using DASoTiemChung.Controllers
@using DASoTiemChung.Filter

@model PagedResultDto<PhieuNhap>
@{
    int orderNum = (Model.SkipCount - 1) * Model.MaxResultCount + 1;
}
@functions {
    //public string GeneratecomboTableRow(comboDto item, int level)
    //{
    //    var html = @"<tr>
    //            <td align='center'>" + (level == 1 ? Model.OrderNum++ : "") + @"</td>
    //            <td align='left'>"
    //            + @"<div " + (level > 1 ? "style='margin-left: " + level + @"0px;'" : "")
    //            + @"><i style='line-height: 0 !important;' class='bi bi-" + (item.Childrens.Count() > 0 ? "folder" : "file-earmark") + " align-middle'></i> "
    //            + @"<span class='align-middle'>" + item.Name + @"</span>"
    //            + @"</div>"
    //            + @"</td>
    //            <td align='center'>" + (item.Active ? "Đang" : "Không") + " sử dụng" + @"</td>
    //            <td align='center'>" + (item.CreationTime.ToString("HH:mm:ss dd/MM/yyyy")) + @"</td>
    //            <td align='center'>" + (item.LastModificationTime?.ToString("HH:mm:ss dd/MM/yyyy")) + @"</td>
    //            <td align='center'>
    //                <button type='button' class='btn btn-primary' onclick=""openForm({ id: '" + item.Id + @"' })"">
    //                    Cập nhật
    //                </button>
    //                <button type='button' class='btn btn-danger' onclick=""deleteItem({ id: '" + item.Id + @"' })"">
    //                    Xóa
    //                </button>
    //            </td>
    //        </tr>
    //        ";
    //    if (item.Childrens != null && item.Childrens.Count() > 0)
    //    {
    //        level++;
    //        foreach (var child in item.Childrens)
    //        {
    //            html += GeneratecomboTableRow(child, level);
    //        }
    //    }
    //    return html;
    //}
}
<!-- table striped -->
<div class="table-responsive">
    <table class="table table-bordered table-striped table-hover mb-0">
        <thead>
            <tr>
                <th class="text-center">#</th>
                
                <th class="text-center col-lg-2">Mã phiếu nhập</th>

                  <th class="text-center col-lg-2">Tổng tiền</th>
                 <th class="text-center col-lg-2">Ngày nhập</th>
                 <th class="text-center col-lg-2">Nhân viên nhập</th>
                 <th class="text-center col-lg-4">Ghi chú</th>

                
                <th class="text-center">Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var combo in (Model.Items ?? new List<PhieuNhap>()))
            {
                @*@Html.Raw(GeneratecomboTableRow(combo, 1))*@
                <tr>
                    <td align="center">@(orderNum++)</td>

                    <td class="center"> @Html.Raw(combo.MaPhieuNhap)</td>
                    <td class="center"> @Html.Raw(combo.Tongtien.HasValue? combo.Tongtien.Value.ToString("n0"):0.ToString("n0"))</td>
                    
                    <td align="center">@Html.Raw(combo.ThoiGianNhap.Value.ToString("dd/MM/yyyy"))</td>
                    <td align="center">@Html.Raw(combo.MaNhanVienNavigation.TenTaiKhoan)</td>
                    <td align="center">@Html.Raw(combo.GhiChu)</td>
                    <td align="center">
                        <div class="btn-group">
                            <button type="button" class="btn btn-primary"
                                onclick="openForm({ url: '@Url.RouteUrl(PhieuNhapController.RouteForm, new { id = combo.MaPhieuNhap })' })">
                                Sửa
                            </button>
                            <button type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
                                <span class="visually-hidden">Menu thả xuống</span>
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <a class="dropdown-item" href="javascript:;"
                                   onclick="confirmOnDelete({ url: '@Url.RouteUrl(PhieuNhapController.RouteDelete, new { id = combo.MaPhieuNhap })' })">
                                        Xóa
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </td>
                </tr>


            }
        </tbody>
    </table>
</div>
<!-- end table striped -->
<div class="row p-1">
    <div class="col-12">
        <div class="float-right d-inline-flex align-items-center">
            <label class="text-nowrap">Hiển thị</label>
            <select class="form-select mx-2" role="button" onchange="getPaging({ index: 1, size: this.value });">
                @foreach (var i in new int[] { 5, 10, 20, 50, 100 })
                {
                    @Html.Raw($"<option value=\"{i}\" {Html.Raw(Model.MaxResultCount == i ? "selected" : "")}>{i}</option>")
                }
            </select>
            <label class="text-nowrap">bản ghi / @Html.Raw(Model.TotalCount) bản ghi</label>
        </div>
        <div class="float-end">
            <nav aria-label="Page navigation">
                <ul class="pagination pagination-primary m-0">
                    <li class="page-item @Html.Raw(Model.SkipCount > 1 ? "" : "disabled")">
                        <a class="page-link" onclick="getPaging({ index: 1 })">Đầu</a>
                    </li>
                    <li class="page-item @Html.Raw(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link" onclick="getPaging({ index: @(Model.SkipCount - 1) })"><</a>
                    </li>
                    @if (Model.SkipCount > 1)
                    {
                        <li class="page-item"><a class="page-link" onclick="getPaging({ index: @(Model.SkipCount - 1) })">@Html.Raw(Model.SkipCount - 1)</a></li>
                    }
                    <li class="page-item disabled"><a class="page-link">@Html.Raw(Model.SkipCount)</a></li>
                    @if (Model.SkipCount < Model.PageCount)
                    {
                        <li class="page-item"><a class="page-link" onclick="getPaging({ index: @(Model.SkipCount + 1) })">@Html.Raw(Model.SkipCount + 1)</a></li>
                    }
                    <li class="page-item  @Html.Raw(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link" onclick="getPaging({ index: @(Model.SkipCount + 1) })">></a>
                    </li>
                    <li class="page-item @Html.Raw(Model.SkipCount < Model.PageCount ? "" : "disabled")">
                        <a class="page-link" onclick="getPaging({ index: @Model.PageCount })">Cuối</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>